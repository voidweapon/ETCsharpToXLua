-- Generated by CSharp.lua Compiler
local System = System
local Linq = System.Linq.Enumerable
local ET = ET
local ETCold = ETCold
local UnityEngine = UnityEngine
System.namespace("ET", function (namespace)
  namespace.class("LoadConfigHelper", function (namespace)
    local LoadAllConfigBytes
    LoadAllConfigBytes = function (types, output)
      if UnityEngine.Application.getisEditor() then
        local dirPath = "Assets/Bundles/Config/"
        for _, _type in System.each(types) do
          local name = _type:getName()
          local path = dirPath .. name .. ".bytes"
          local asset = ETCold.LoadHelper.LoadTextAsset(path)
          -- ResourceHelper.LoadAsset<TextAsset>(path);
          output:set(name, asset:getbytes())
        end
      else
        local keys = ET.ResourcesComponent.Instance:GetBundleAll("config.unity3d")

        local keysList = Linq.ToList(keys:getKeys())
        for i = 0, #keysList - 1 do
          local v = System.cast(UnityEngine.TextAsset, keys:get(keysList:get(i)))
          local key = keysList:get(i)
          output:set(key, v:getbytes())
        end
      end
    end
    return {
      LoadAllConfigBytes = LoadAllConfigBytes
    }
  end)
end)
