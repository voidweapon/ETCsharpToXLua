-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("UIComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.UIComponent)
        }
      end,
      Awake = Awake
    }
  end)

  -- <summary>
  -- 管理Scene上的UI
  -- </summary>
  namespace.class("UIComponentSystem", function (namespace)
    local Create, Remove, Get
    Create = function (self, uiType)
      return System.async(function (async, self, uiType)
        local ui = async:Await(ET.UIEventComponentSystem.OnCreate(ET.UIEventComponent.Instance, self, uiType))
        self.UIs:AddKeyValue(uiType, ui)
        return ui
      end, nil, self, uiType)
    end
    Remove = function (self, uiType)
      local default, ui = self.UIs:TryGetValue(uiType)
      if not default then
        return
      end

      ET.UIEventComponentSystem.OnRemove(ET.UIEventComponent.Instance, self, uiType)

      self.UIs:RemoveKey(uiType)
      ui:Dispose()
    end
    Get = function (self, name)
      local ui = nil
      local _
      _, ui = self.UIs:TryGetValue(name)
      return ui
    end
    return {
      Create = Create,
      Remove = Remove,
      Get = Get
    }
  end)
end)
