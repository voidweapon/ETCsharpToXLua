-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local UnityEngineSceneManagement = UnityEngine.SceneManagement
System.namespace("ET", function (namespace)
  namespace.class("SceneChangeComponentUpdateSystem", function (namespace)
    local Update
    Update = function (this, self)
      if not self.loadMapOperation:getisDone() then
        return
      end

      if self.tcs == nil then
        return
      end

      local tcs = self.tcs
      self.tcs = nil
      tcs:SetResult()
    end
    return {
      base = function (out)
        return {
          out.ET.UpdateSystem_1(out.ET.SceneChangeComponent)
        }
      end,
      Update = Update
    }
  end)


  namespace.class("SceneChangeComponentDestroySystem", function (namespace)
    local Destroy
    Destroy = function (this, self)
      self.loadMapOperation = nil
      self.tcs = nil
    end
    return {
      base = function (out)
        return {
          out.ET.DestroySystem_1(out.ET.SceneChangeComponent)
        }
      end,
      Destroy = Destroy
    }
  end)

  namespace.class("SceneChangeComponentSystem", function (namespace)
    local ChangeSceneAsync, Process
    ChangeSceneAsync = function (self, sceneName)
      return System.async(function (async, self, sceneName)
        self.tcs = ET.ETTask.Create(false)
        -- 加载map
        self.loadMapOperation = UnityEngineSceneManagement.SceneManager.LoadSceneAsync(sceneName)
        --this.loadMapOperation.allowSceneActivation = false;
        async:Await(self.tcs)
      end, nil, self, sceneName)
    end
    Process = function (self)
      if self.loadMapOperation == nil then
        return 0
      end
      return System.ToInt32(self.loadMapOperation:getprogress() * 100)
    end
    return {
      ChangeSceneAsync = ChangeSceneAsync,
      Process = Process
    }
  end)
end)
