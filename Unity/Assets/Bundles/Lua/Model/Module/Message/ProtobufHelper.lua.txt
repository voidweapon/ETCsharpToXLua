-- Generated by CSharp.lua Compiler
local System = System
local ETCold = ETCold
local UnityEngine = UnityEngine
System.namespace("ET", function (namespace)
  namespace.class("ProtobufHelper", function (namespace)
    local messagePath, configPath, Init, FromBytes, ToBytes, ToStream, FromStream, static
    static = function (this)
      local protoc = require "protoc"
      local textAsset = ETCold.LoadHelper.LoadTextAsset(messagePath)
      local textAssetConfig = ETCold.LoadHelper.LoadTextAsset(configPath)
      if UnityEngine.Object.op_Inequality(textAsset, nil) then
        local allmsg = textAsset:gettext() .. textAssetConfig:gettext()
        protoc:load(allmsg)
      end
    end
    messagePath = "Assets/Bundles/Lua/pbc/AutoGeneratedCode/OuterMessage.txt"
    configPath = "Assets/Bundles/Lua/pbc/config.proto.txt"
    Init = function ()
    end
    FromBytes = function (type, bytes, index, count)
      local name = type:getFullName()
      if bytes ~= nil then
        return decodeProtobuf1(bytes, name)
      end
      return nil
    end
    ToBytes = function (message)
      local bytes = nil

      bytes = encodeProtobuf(message)
      return bytes
    end
    ToStream = function (message, stream)
      local bytes = nil

      bytes = encodeProtobuf(message)

      ETCold.StreamHelper.WriteBytes(stream, bytes)
    end
    FromStream = function (type, stream)
      local bytes = ETCold.StreamHelper.ReadBytes(stream, 2 --[[Packet.OpcodeLength]])
      local name = type:getFullName()
      if bytes ~= nil then
        return decodeProtobuf1(bytes, name)
      end

      return nil
    end
    return {
      Init = Init,
      FromBytes = FromBytes,
      ToBytes = ToBytes,
      ToStream = ToStream,
      FromStream = FromStream,
      static = static
    }
  end)
end)
