-- Generated by CSharp.lua Compiler
local System = System
System.namespace("ET", function (namespace)
  namespace.class("QueueDictionary_2", function (namespace)
    return function (T, K)
      local Enqueue, Dequeue, Remove, ContainsKey, getCount, getFirstKey, getFirstValue, get, 
      Clear, __ctor__
      local ListT = System.List(T)
      local DictTK = System.Dictionary(T, K)
      __ctor__ = function (this)
        this.list = ListT()
        this.dictionary = DictTK()
      end
      Enqueue = function (this, t, k)
        this.list:Add(t)
        this.dictionary:AddKeyValue(t, k)
      end
      Dequeue = function (this)
        if #this.list == 0 then
          return
        end
        local t = this.list:get(0)
        this.list:RemoveAt(0)
        this.dictionary:RemoveKey(t)
      end
      Remove = function (this, t)
        this.list:Remove(t)
        this.dictionary:RemoveKey(t)
      end
      ContainsKey = function (this, t)
        return this.dictionary:ContainsKey(t)
      end
      getCount = function (this)
        return #this.list
      end
      getFirstKey = function (this)
        return this.list:get(0)
      end
      getFirstValue = function (this)
        local t = this.list:get(0)
        return this:get(t)
      end
      get = function (this, t)
        return this.dictionary:get(t)
      end
      Clear = function (this)
        this.list:Clear()
        this.dictionary:Clear()
      end
      return {
        Enqueue = Enqueue,
        Dequeue = Dequeue,
        Remove = Remove,
        ContainsKey = ContainsKey,
        getCount = getCount,
        getFirstKey = getFirstKey,
        getFirstValue = getFirstValue,
        get = get,
        Clear = Clear,
        __ctor__ = __ctor__
      }
    end
  end)
end)
