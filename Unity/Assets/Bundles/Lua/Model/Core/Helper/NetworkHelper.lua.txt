-- Generated by CSharp.lua Compiler
local System = System
local SystemNet = System.Net
local SystemNetworkInformation = System.Net.NetworkInformation
local ListString = System.List(System.String)
System.namespace("ET", function (namespace)
  namespace.class("NetworkHelper", function (namespace)
    local GetAddressIPs, ToIPEndPoint, ToIPEndPoint1
    GetAddressIPs = function ()
      local list = ListString()
      for _, networkInterface in System.each(SystemNetworkInformation.NetworkInterface.GetAllNetworkInterfaces()) do
        local continue
        repeat
          if networkInterface:getNetworkInterfaceType() ~= SystemNetworkInformation.NetworkInterfaceType.Ethernet then
            continue = true
            break
          end
          for _, add in System.each(networkInterface:GetIPProperties():getUnicastAddresses()) do
            list:Add(add:getAddress():ToString())
          end
          continue = true
        until 1
        if not continue then
          break
        end
      end
      return list:ToArray()
    end
    ToIPEndPoint = function (host, port)
      return SystemNet.IPEndPoint(SystemNet.IPAddress.Parse(host), port)
    end
    ToIPEndPoint1 = function (address)
      local index = address:LastIndexOf(58 --[[':']])
      local host = address:Substring(0, index)
      local p = address:Substring(index + 1)
      local port = System.Int32.Parse(p)
      return ToIPEndPoint(host, port)
    end
    return {
      GetAddressIPs = GetAddressIPs,
      ToIPEndPoint = ToIPEndPoint,
      ToIPEndPoint1 = ToIPEndPoint1
    }
  end)
end)
